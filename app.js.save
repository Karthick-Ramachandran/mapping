let originalnodes = [];
let originaledges = [];

axios.get("{{url('/api/nodes')}}").then(data => {
  originalnodes = data.data;
});

axios.get("http://freshvegges.pics:40020/mppolice/public/http://freshvegges.pics:40020/mppolice/public/").then(data => {
  originaledges = data.data;
});

function draw() {
  var nodes = originalnodes;

  var edges = originaledges;

  var container = document.getElementById("mynetwork");
  var data = {
    nodes: nodes,
    edges: edges
  };
  var options = {
    nodes: {
      shape: "dot",
      size: 50
    },
    layout: {
      randomSeed: 34
    },
    interaction: {
      hover: true,
      keyboard: {
        enabled: true,
        bindToWindow: false
      },
      navigationButtons: true,
      tooltipDelay: 1000000,
      hideEdgesOnDrag: true,
      zoomView: false
    },
    physics: {
      forceAtlas2Based: {
        gravitationalConstant: -26,
        centralGravity: 0.005,
        springLength: 230,
        springConstant: 0.18
      },
      maxVelocity: 146,
      solver: "forceAtlas2Based",
      timestep: 0.35,
      stabilization: {
        enabled: true,
        iterations: 2000,
        updateInterval: 25
      }
    }
  };
  var network = new vis.Network(container, data, options);

  network.on("stabilizationProgress", function(params) {
    var maxWidth = 496;
    var minWidth = 20;
    var widthFactor = params.iterations / params.total;
    var width = Math.max(minWidth, maxWidth * widthFactor);

    document.getElementById("bar").style.width = width + "px";
    document.getElementById("text").innerHTML =
      Math.round(widthFactor * 100) + "%";
  });
  network.once("stabilizationIterationsDone", function() {
    document.getElementById("text").innerHTML = "100%";
    document.getElementById("bar").style.width = "496px";
    document.getElementById("loadingBar").style.opacity = 0;
    // really clean the dom element
    setTimeout(function() {
      document.getElementById("loadingBar").style.display = "none";
    }, 500);
  });
}
window.addEventListener("load", () => {
  draw();
});

